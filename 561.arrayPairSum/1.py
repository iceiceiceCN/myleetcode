class Solution:
    def arrayPairSum(self, nums: List[int]) -> int:
        nums.sort()
        res = sum(nums[::2])
        return res


"""
为了理解这种方法，让我们从不同的角度来看待问题。我们需要形成数组元​​素的配对，使得这种配对中最小的总和最大。
因此，我们可以查看选择配对中最小值的操作，比如 (a,b) 可能会产生的最大损失 a-b(如果 a > b)。

如果这类配对产生的总损失最小化，那么总金额现在将达到最大值。
只有当为配对选择的数字比数组的其他元素更接近彼此时，才有可能将每个配对中的损失最小化。

考虑到这一点，我们可以对给定数组的元素进行排序，并直接按排序顺序形成元素的配对。
这将导致元素的配对，它们之间的差异最小，从而导致所需总和的最大化。

a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>>b = a[::2]
[0, 2, 4, 6, 8]

>>>b = a[1::2]
[1, 3, 5, 7, 9]
"""